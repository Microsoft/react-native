name: CI

on: [pull_request]

jobs:

  AndroidRNPR:
    name: Android React Native PR
    runs-on: windows-2016
    steps:

    - name: Skip NO CI
      if: contains( github.event.head_commit.message, '***NO_CI***')
      run: exit 123

    - uses: actions/checkout@v1
      with:
        submodules: true

    - run: npm install

    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1

    - name: NuGet restore
      run: nuget.exe restore ReactAndroid/packages.config -PackagesDirectory ReactAndroid/packages/ -Verbosity Detailed -NonInteractive

    - name: Create RNTester bundle
      run: node cli.js bundle --entry-file .\RNTester\js\RNTesterApp.android.js --bundle-output RNTesterApp.android.bundle --platform android --reactNativePath .
      
    - run: gradlew.bat "-Pparam=excludeLibs" installArchives

    - name: Extract version from package.json, and put it in nuspec
      run: |
        $lines = Get-Content package.json | Where {$_ -match '^\s*"version":.*'} 
        $npmVersion = $lines.Trim().Split()[1].Trim('",');
        (Get-Content ReactAndroid/ReactAndroid.nuspec).replace('__BuildBuildNumber__', $npmVersion) | Set-Content ReactAndroid/ReactAndroid.nuspec
      shell: powershell

    - name: Change pom file to always use version 1000
      run: |
        (Get-Content android\com\facebook\react\react-native\0.59.0\react-native-0.59.0.pom).replace('<version>0.59.0</version>', '<version>1000.0.0-master</version>') | Set-Content android\com\facebook\react\react-native\0.59.0\react-native-0.59.0.pom
      shell: powershell

    - run: nuget pack ReactAndroid/ReactAndroid.nuspec

    - run: gradlew.bat "clean"

  ApplePR:
    name: Apple React Native PR
    runs-on: macOS-10.14
    strategy:
      matrix:
        slice: [
          {xcode_sdk: iphonesimulator, xcode_scheme: RNTester, xcode_destination: 'platform=iOS Simulator,OS=latest,name=iPhone 8', packager_platform: ios},
          {xcode_sdk: appletvsimulator, xcode_scheme: RNTester-tvOS, xcode_destination: 'platform=tvOS Simulator,OS=latest,name=Apple TV', packager_platform: ios},
          {xcode_sdk: macosx, xcode_scheme: RNTester-macOS, xcode_destination: 'platform=macOS,arch=x86_64', packager_platform: macos}
        ]

    steps:

    - name: Skip NO CI
      if: contains( github.event.head_commit.message, '***NO_CI***')
      run: exit 123

    - uses: actions/checkout@v1
      with:
        submodules: true

    - run: brew bundle

    - run: brew link node@10 --overwrite --force

    # The XCODE_11_DEVELOPER_DIR variable is defined in the Hosted Agents and is used by the Xcode@5 tasks.
    - name: 'Ensure XCODE_11_DEVELOPER_DIR'
      run: |
        if [ -z $XCODE_11_DEVELOPER_DIR ]; then 
          DIR='/Applications/Xcode_11_beta.app/Contents/Developer/'
          if [ ! -d $DIR ]; then
            DIR='/Applications/Xcode.app/Contents/Developer/'
          fi
          if [ -d $DIR ]; then
            echo "##[set-env name=XCODE_11_DEVELOPER_DIR;]$DIR"
          else
            (>&2 echo "No Xcode found.")
          fi
        fi
      
    # The DEVELOPER_DIR variable is used by xcodebuild to specify the version of Xcode to use.
    - name: Set DEVELOPER_DIR
      run: |
        echo "##[set-env name=DEVELOPER_DIR;]$XCODE_11_DEVELOPER_DIR"

    - name: Check XCode version
      run: |
        REQUIRED=11.0
        VER=`xcodebuild -version | head -n1 | cut -d' ' -f2`
        if (( $(echo "$VER >= $REQUIRED" | bc -l) )); then
          echo "XCode version $VER is active."
        else
          (>&2 echo "Must have XCode $REQUIRED or later.")
        fi

    - run: yarn install

    - name: Setup packager and WebSocket test server
      run: .ado/ado-test-setup.sh

    - name: curl the packager
      run: |
        echo "Preparing the packager for platform ${PLATFORM}"
        curl --retry-connrefused --connect-timeout 5 --max-time 10 --retry 10 --retry-delay 5 --retry-max-time 120 "http://localhost:8081/IntegrationTests/IntegrationTestsApp.bundle?platform=${PLATFORM}&dev=true" -o /dev/null
      env:
        PLATFORM: ${{ matrix.slice.packager_platform }}

    - name: XCode build and test Debug
      run: |
        xcodebuild -sdk ${{ matrix.slice.xcode_sdk }} -configuration Debug -project RNTester/RNTester.xcodeproj -scheme ${{ matrix.slice.xcode_scheme }} build test -destination "${{ matrix.slice.xcode_destination }}" ONLY_ACTIVE_ARCH=NO -verbose -UseModernBuildSystem=NO -derivedDataPath DerivedData CODE_SIGN_STYLE=Automatic DEVELOPMENT_TEAM=UBF8T346G9 | xcpretty -r junit --no-color

    - name: XCode build Release
      run: |
        xcodebuild -sdk ${{ matrix.slice.xcode_sdk }} -configuration Release -project RNTester/RNTester.xcodeproj -scheme ${{ matrix.slice.xcode_scheme }} build -destination "${{ matrix.slice.xcode_destination }}" ONLY_ACTIVE_ARCH=NO -verbose -UseModernBuildSystem=NO -derivedDataPath DerivedData CODE_SIGN_STYLE=Automatic DEVELOPMENT_TEAM=UBF8T346G9 | xcpretty -r junit --no-color

    - name: Cleanup packager and WebSocket test server
      run: .ado/ado-test-cleanup.sh
