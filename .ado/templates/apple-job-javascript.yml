parameters:
  apply_office_patches: ''

steps:
  - script: 'brew bundle'
    displayName: 'brew bundle'

  - script: brew link node@10 --overwrite --force
    displayName: 'ensure node 10'

  - template: apple-xcode-select.yml

  - script: echo ${{ parameters.apply_office_patches }}
    name: echovar1

  - script: echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the ${{ parameters.apply_office_patches }} value"
    name: setvarStep

  - script: echo $(setvarStep.myOutputVar)
    name: echovar2

  - script: echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the ${{ eq(parameters.apply_office_patches, true) }} value"
    name: setvarStep3

  - script: echo $(setvarStep3.myOutputVar)
    name: echovar3


  - task: CmdLine@2
    displayName: Apply Android specific patches for Office consumption
    inputs:
      script: node $(System.DefaultWorkingDirectory)android-patches/bundle/bundle.js patch $(System.DefaultWorkingDirectory) BuildAndThirdPartyFixes DialogModule UIEditText UIScroll UITextFont Accessibility OfficeRNHost SecurityFixes V8Integration AnnotationProcessing --patch-store $(System.DefaultWorkingDirectory)android-patches/patches-droid-office-grouped --log-folder $(System.DefaultWorkingDirectory)android-patches/logs
    condition: and(succeeded(), eq('${{ parameters.apply_office_patches }}', true))

  - script: 'yarn install'
    displayName: 'yarn install'

  - script: 'yarn test-ci'
    displayName: 'yarn test-ci'

  - script: 'yarn flow-check-ios'
    displayName: 'yarn flow-check-ios'

  - script: 'yarn flow-check-macos'
    displayName: 'yarn flow-check-macos'

  - script: 'yarn flow-check-android'
    displayName: 'yarn flow-check-android'

  - script: 'yarn lint'
    displayName: 'yarn lint'

  - script: 'yarn format-check'
    displayName: 'yarn format-check'