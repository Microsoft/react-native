# This file defines the build steps to publish a release
name: $(Date:yyyyMMdd).$(Rev:.r)

trigger: 
  batch: true
  branches:
    include:
      - master
      - fabric
  paths:
    exclude:
      - package.json

pr: none

jobs:
  - job: RNGithubNpmJSPublish
    displayName: React-Native GitHub Publish to npmjs.org
    pool:
      vmImage: vs2017-win2016
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        # fetchDepth: 2 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

      - task: CmdLine@2
        displayName: npm install
        inputs:
          script: npm install

      - task: CmdLine@2
        displayName: Bump package version
        inputs:
          script: node .ado/bumpFileVersions.js

      - task: Npm@1
        displayName: "Publish latest react-native-macos to npmjs.org"
        inputs:
          command: 'publish'
          publishEndpoint: 'npmjs'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

      - task: Npm@1
        displayName: "Publish stable react-native-macos to npmjs.org"
        inputs:
          command: 'custom'
          customCommand: publish --tag $(Build.SourceBranchName)
          publishEndpoint: 'npmjs'
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

      - task: CmdLine@2
        displayName: 'Tag published release'
        inputs:
          script: node .ado/gitTagRelease.js
        env:
          BUILD_STAGINGDIRECTORY: $(Build.StagingDirectory)
          BUILD_SOURCEBRANCH: $(Build.SourceBranch)
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          githubApiToken: $(githubApiToken)


  - job: RNMacOSInitNpmJSPublish
    displayName: react-native-macos-init Publish to npmjs.org
    pool:
      vmImage: vs2017-win2016
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        # fetchDepth: 2 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

      - template: templates/configure-git.yml

      - task: CmdLine@2
        displayName: yarn install
        inputs:
          script: |
            cd packages/react-native-macos-init
            yarn install

      - task: CmdLine@2
        displayName: yarn build
        inputs:
          script: |
            cd packages/react-native-macos-init
            yarn build

      - task: CmdLine@2
        displayName: "Publish react-native-macos-init to npmjs.org"
        inputs:
          script: |
            npx beachball publish --branch origin/$(Build.SourceBranchName) -n $(npmAuthToken) -yes -m "applying package updates ***NO_CI***" --access public

  - job: RNGithubOfficePublish
    displayName: React-Native GitHub Publish to Office
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        # fetchDepth: 2 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

      - task: UseNode@1
        inputs:
          version: '12.x'

      - template: templates/apple-droid-node-patching.yml
        parameters:
          apply_office_patches: true

      # This is currently required as the command task (strangely) always runs elevated .. 
      # which makes all the files touched by the above patching step unreadable by following non-command tasks without sudo. 
      # This makes all the files readable.
      - task: CmdLine@2
        displayName: chmod
        inputs:
          script: chmod -R +r .

      # Install NuGet
      - task: CmdLine@2
        inputs:
          script: mkdir $(System.DefaultWorkingDirectory)/nuget-bin/ && curl -o $(System.DefaultWorkingDirectory)/nuget-bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
        continueOnError: true

      - task: CmdLine@2
        displayName: "Rename package to react-native"
        inputs:
          script: node .ado/renamePackageForOffice.js

      - task: CmdLine@2
        displayName: npm install
        inputs:
          script: npm install

      - task: CmdLine@2
        displayName: Bump package version
        inputs:
          script: node .ado/bumpOfficeFileVersions.js

      - task: CmdLine@2
        displayName: gradlew installArchives
        inputs:
          script: ./gradlew installArchives -Pparam="excludeLibs"

      - template: templates\prep-android-nuget.yml

      # Very similar to the default pack task .. but appends 'ndk21b' to the nuget pack version
      - task: CmdLine@2
        displayName: 'NuGet pack'
        inputs:
          script: OUTPUT_DIR=$(Build.StagingDirectory)/final;NDK=ndk`cat ${ANDROID_SDK_ROOT}/ndk-bundle/source.properties 2>&1 | grep Pkg.Revision | awk '{ print $3}' | awk -F. '{ print $1 }'`; mono $(System.DefaultWorkingDirectory)/nuget-bin/nuget.exe pack $(System.DefaultWorkingDirectory)/ReactAndroid/ReactAndroid.nuspec -OutputDirectory $OUTPUT_DIR -Properties buildNumber=$(buildNumber)-$NDK;commitId=$(Build.SourceVersion)

      - task: CmdLine@2
        displayName: 'Npm pack'
        inputs:
          script: node .ado/npmOfficePack.js
        env:
          BUILD_STAGINGDIRECTORY: $(Build.StagingDirectory)
          BUILD_SOURCEBRANCH: $(Build.SourceBranch)
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          githubApiToken: $(githubApiToken)

      - task: PublishBuildArtifacts@1
        displayName: 'Publish final artifacts'
        inputs:
          PathtoPublish: '$(Build.StagingDirectory)\final'
          ArtifactName: 'ReactNative-Final' 
